package com.klef.ep.services;

import java.util.List;

import javax.ejb.Stateless;
import javax.ejb.TransactionManagement;
import javax.ejb.TransactionManagementType;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;

import com.klef.ep.models.Employee;

@Stateless
@TransactionManagement(TransactionManagementType.BEAN)
public class EmployeeServiceImple implements EmployeeServices {

	
	public String addEmployee(Employee emp) {
		EntityManagerFactory emf=Persistence.createEntityManagerFactory("EmaProject");
		EntityManager em=emf.createEntityManager();
		em.getTransaction().begin();
		em.persist(emp);//for insertion
		em.getTransaction().commit();
		em.close();
		emf.close();
		return "Inserted Successfully";
	}

	public String deleteEmployee(int id) {
		//System.out.println("entered delete !!!!!");
		EntityManagerFactory emf=Persistence.createEntityManagerFactory("EmaProject");
		EntityManager em=emf.createEntityManager();
		em.getTransaction().begin();
		Employee e=em.find(Employee.class, id);
		em.remove(e);
		em.getTransaction().commit();
		em.close();
		emf.close();
		return "Deleted Successfully";
	}

	@Override
	public List<Employee> viewAllEmployees() {
		EntityManagerFactory emf=Persistence.createEntityManagerFactory("EmaProject");
		EntityManager em=emf.createEntityManager();
		em.getTransaction().begin();
		Query qry=em.createQuery("select e from Employee e");//e as alias
		List<Employee> emplist=qry.getResultList();
		em.close();
		emf.close();
		return emplist;
	}

	@Override
	public Employee viewEmployeeById(int id) {
		EntityManagerFactory emf=Persistence.createEntityManagerFactory("EmaProject");
		EntityManager em=emf.createEntityManager();
		em.getTransaction().begin();
		Employee e=em.find(Employee.class, id);
		em.close();
		emf.close();
		return e;
	}

	@Override
	public String updateEmployee(Employee emp) {
		EntityManagerFactory emf=Persistence.createEntityManagerFactory("EmaProject");
		EntityManager em=emf.createEntityManager();
		em.getTransaction().begin();
		Employee e=em.find(Employee.class, emp.getId());//e is in data base where as emp is from form 
		e.setAge(emp.getAge());
		return "UPDATED SUCCESSFULLY ...";
	}

}
